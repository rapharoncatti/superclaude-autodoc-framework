# Unity Game Development Project Template
# For Unity projects with C# scripting and game development workflows

project_type: "unity-gamedev"
description: "Unity game development projects with C# scripting"
technologies: ["C#", "Unity", "Visual Scripting", "MonoBehaviour"]

patterns:
  source_files: "Assets/Scripts/.*\\.cs$"
  config_files: "ProjectSettings/.*\\.asset$|Packages/manifest\\.json$|Packages/packages-lock\\.json$"
  scene_files: "Assets/.*\\.unity$"
  prefab_files: "Assets/.*\\.prefab$"
  asset_files: "Assets/.*\\.(png|jpg|fbx|obj|wav|mp3|ogg)$"
  package_files: "Packages/manifest\\.json$|Packages/packages-lock\\.json$"
  shader_files: "Assets/.*\\.(shader|hlsl|cginc)$"
  animation_files: "Assets/.*\\.(anim|controller)$"

documentation_sections:
  - name: "Game Design Document"
    auto_update: false
    template: "game-design-doc.md"
    description: "Core game concept, mechanics, and design vision"
  - name: "Architecture Overview"
    auto_update: true
    sections: ["Game Layer", "Systems Layer", "UI Layer", "Integration Layer"]
    description: "Unity-specific architecture and component relationships"
  - name: "Component Reference"
    auto_update: true
    generator: "unity-component-docs"
    description: "MonoBehaviour scripts and their functionality"
  - name: "Scene Architecture"
    auto_update: true
    generator: "unity-scene-docs"
    description: "Scene organization and GameObject hierarchy"
  - name: "Development Setup"
    auto_update: true
    description: "Unity version, packages, and development environment"
  - name: "Build & Deployment"
    auto_update: true
    description: "Platform-specific builds and deployment process"
  - name: "Performance Considerations"
    auto_update: true
    description: "Optimization strategies and performance monitoring"

mcp_integration:
  recommended_servers: ["context7", "sequential", "unity-mcp"]
  optional_servers: ["magic", "puppeteer"]
  unity_specific_servers: ["unity-mcp"]

personas:
  primary: ["architect", "game-designer", "developer"]
  secondary: ["performance", "qa", "technical-artist"]
  specialized: ["gameplay", "ui-ux", "audio"]

auto_doc:
  update_mode: "moderate"
  validation_level: "semantic"
  backup_enabled: true
  auto_commit: false

unity_specifics:
  version_detection: "auto"
  input_system: "auto-detect"
  rendering_pipeline: "auto-detect"
  platform_targets: ["PC", "Mobile", "Console", "WebGL"]

code_analysis:
  monobehaviour_patterns:
    - "public class.*: MonoBehaviour"
    - "void Awake\\(\\)"
    - "void Start\\(\\)"
    - "void Update\\(\\)"
    - "void OnEnable\\(\\)"
    - "void OnDisable\\(\\)"
  
  unity_events:
    - "UnityEvent"
    - "\\[SerializeField\\]"
    - "public.*Event"
  
  performance_patterns:
    - "GetComponent"
    - "FindObjectOfType"
    - "Instantiate"
    - "Destroy"

integration_patterns:
  twitch_integration:
    files: ["TwitchChatConnector.cs", "TwitchVotingSystem.cs", "TwitchGameManager.cs"]
    description: "Twitch Plays integration with real-time voting"
  
  mcp_integration:
    files: ["UnityStartupManager.cs", "ConsoleLogger.cs"]
    description: "Model Context Protocol integration for external control"
  
  networking:
    patterns: ["NetworkBehaviour", "Mirror", "Photon", "Unity Netcode"]
    description: "Multiplayer networking implementation"

asset_management:
  addressables: "auto-detect"
  resource_management: "auto-detect"
  streaming_assets: "auto-detect"